name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    strategy:
      matrix:
        configuration: [Debug, Release]
    runs-on: ubuntu-latest
    env:
      Solution_Name: EasyFly.Web.sln
      Test_Project_Path: EasyFly.Tests/EasyFly.Tests.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Restore
      run: dotnet restore ${{ env.Solution_Name }}

    - name: Build (${{ matrix.configuration }})
      run: dotnet build ${{ env.Solution_Name }} \
            --configuration ${{ matrix.configuration }} \
            --no-restore

    - name: Run tests (${{ matrix.configuration }})
      run: dotnet test ${{ env.Test_Project_Path }} \
            --configuration ${{ matrix.configuration }} \
            --logger trx \
            --results-directory ./TestResults \
            --filter "FullyQualifiedName~ServiceTests"

  deploy:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore
      run: dotnet restore ${{ env.Solution_Name }}

    - name: Build (Release)
      run: dotnet build ${{ env.Solution_Name }} \
            --configuration Release \
            --no-restore

    - name: Publish
      run: dotnet publish ${{ env.Solution_Name }} \
            --configuration Release \
            --output ./publish \
            --runtime win-x86

    - name: Test (smoke)
      run: dotnet test ${{ env.Test_Project_Path }}

    - name: Deploy to MonsterASP.NET via WebDeploy
      uses: rasmusbuchholdt/simply-web-deploy@2.1.0
      with:
        website-name: ${{ secrets.WEBSITE_NAME }}
        server-computer-name: ${{ secrets.SERVER_COMPUTER_NAME }}
        server-username: ${{ secrets.SERVER_USERNAME }}
        server-password: ${{ secrets.SERVER_PASSWORD }}
